services:
  mysql:
    image: mysql:8.0.2
    container_name: mysql-container
    restart: unless-stopped
    env_file: ./.env
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE}:usuarios"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}:root"
    ports:
      - "${MYSQL_DOCKER_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d

    networks:
      - app-network

  springboot:
    build: .
    container_name: springboot-app
    restart: unless-stopped
    env_file: ./.env
    ports:
      - "${SPRING_LOCAL_PORT}:8080"
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url": "jdbc:mysql://mysql:$$MYSQL_DOCKER_PORT/$$MYSQL_DATABASE?useSSL=false&allowPublicKeyRetrival=true&serverTimezone=UTC",
        "spring.datasource.username" : "$${ MYSQL_USER }",
        "spring.datasource.password": "$${ MYSQL_ROOT_PASSWORD }",
        "spring.datasource.driver-class-name":"com.mysql.cj.jdbc.Driver",
        "spring.jpa.hibernate.ddl.auto":"create",
        "spring.jpa.show-sql": "true",
        "spring.docker.compose.enable":"false"
      }'
    depends_on:
      - mysql

    networks:
      - app-network

  python-flask-app:
    build:
      context: ./python-flask-app
    restart: unless-stopped
    ports:
      - "4000:4000"
    
    #depends_on:
    # - mysql
    
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
